---
title: "Food Consumption 2"
number-sections: true
execute: 
  warning: false
fig-env: 'figure'
fig-pos: 'h'
fig-align: center
code-fold: false
---
## Background
### Load and Inspect

```{r}
library(tidytuesdayR)
library(tidyverse)
library(rnaturalearth)
library(sf)
library(RColorBrewer)
```
```{r}
tuesdata <- tt_load('2020-02-18')
fc <- tuesdata$food_consumption
```
Loaded, gave it a sec cuz its downloading it right now!
```{r}
str(fc)
head(fc, 22)
distinct(fc, food_category)
```
### Clean up
```{r}
#I could do fct_recode, but why change the datatype?! I know its more elegant, but this is more sure, easier to debug (if i get order wrong it is annoying), and again, doesn't change the datatype.
fcc <- fc |>
  mutate(food_category = str_replace(food_category, "& Goat", "")) |>
  mutate(food_category = str_replace(food_category, "Milk - inc. cheese", "Dairy")) |>
  mutate(food_category = str_replace(food_category, "and Wheat Products", "")) |>
  mutate(food_category = str_replace(food_category, "inc. Peanut Butter", ""))
distinct(fcc, food_category)
```
## Most Consuming Countries
::: {.callout-tip title="Question 1"}
**Which 5 countries consume the most food?** 
Demonstrate via table and graph
:::
### Cleaning and Table
```{r}
fcc_sum <- fcc |>
  group_by(country) |>
  summarize(total_consumption = sum(consumption)) |>
  arrange(desc(total_consumption)) |>
  head(5)

#It Just Works
fcc_sum
```
```{r}
#hold up, albania?
fcc |>
  filter(country=="Albania")
#oh, its all the water weight in the milk and such!
```
### Visualization
```{r}
ggplot(fcc_sum, aes(
    x=fct_reorder(country, desc(total_consumption)), 
    y=total_consumption
  )) +
  geom_col(fill="yellow") +
  labs(x="country", title="5 countries which consume the most food")
```
## Top Consumers of Each Food
::: {.callout-tip title="Question 2"}
**Which 5 countries consume the most food** ***category*****?** 
Demonstrate via table and graph
:::
### Cleaning and Table
```{r}
fcc_cat <- fcc |>
  select(-co2_emmission) |>
  group_by(food_category) |>
  slice_max(n = 5, consumption)
#Lamb-and-Goated
fcc_cat
```
### Visualization
```{r}
#| fig-height: 10
#| fig-width: 20
ggplot(fcc_cat, aes(
    x=country,
    y=consumption
  )) +
  facet_wrap(~ food_category, scales="free") +
  geom_col() +
  labs(title="Top five consumers of each food category")
  #that took longer than i thought it would. still doesn't look great, but would need some sort of more drastic measures to actually get that bottom scale legible within this viz
  
```
## Worldwide Consumption
::: {.callout-tip title="Question 3"}
**What does consumption of each food category look like in** ***each country*****?**
Show via chloropleth
:::
###First, flawed wrang and vis
```{r}
#| fig-height: 10
#| fig-width: 20
ne_countries(returnclass = "sf") |>
  #bring in boundary dataset
  select(name, geometry) |>
  #only keep the country name and the boundaries
  left_join(fcc |> select(-co2_emmission),
            #bringing only consumption and name
            join_by(name == country)) |>
  #joining by country name
  ggplot() +
  geom_sf(aes(fill=consumption)) +
  facet_wrap(~food_category) +
  theme(legend.position = "left", legend.key.size = unit(0.5, "in"), legend.text = element_text(size =14), legend.title = element_text(size =14) )
```
Problems: scale is indiscernable, and many countries are missing
###Sussing out NAs
```{r}
ne_countries(returnclass = "sf") |>
  select(name, geometry) |>
  left_join(fcc |> select(-co2_emmission),
            join_by(name == country)) |>
            filter(is.na(consumption)) |>
            st_drop_geometry() 
#i also could use an anti join but i would have to know that the na's were generated from a poor join
```
### NA-Removing Wrangling and viz
```{r}
#| fig-height: 10
#| fig-width: 20
ne_countries(returnclass = "sf") |>
  select(name, geometry) |>
  mutate(name = ifelse(name == "United States of America", "USA", name)) |>
  mutate(name = ifelse(name == "Bosnia and Herz.", "Bosnia and Herzegovina", name)) |>
  mutate(name = ifelse(name == "Czechia", "Czech Republic", name)) |>
  mutate(name = ifelse(name == "Taiwan", "Taiwan. ROC", name)) |>
  #these lines fix the names 
  left_join(fcc |> select(-co2_emmission), 
            join_by(name==country)) |>
  pivot_wider(names_from = food_category,
              values_from = "consumption") |>
  #oh i see here, we're making it so that everyone has every food cartegory, except NA, which is the useless one. just so they have some sort of value for it, even if its "NA".
  select(-"NA") |>
  pivot_longer(cols = c(-name, -geometry),
# and now of course we're returning it to the way it was before, although you could certainly plot it in this format as well
               names_to = "food_category",
                values_to = "consumption") |>
  ggplot() +
  geom_sf(aes(fill=consumption)) +
  facet_wrap(~food_category) +
  theme(legend.position = "left", legend.key.size = unit(0.5, "in"), legend.text = element_text(size =14), legend.title = element_text(size =14) )
```
Problems: still very hard to read because of scale. unfortunately, you cannot fix this with scale = "free", cuz that doesn't work in geom_sf
###Statistics
```{r}
fcc |>
  group_by(food_category) |>
  summarize(min(consumption),max(consumption),range=(max(consumption)-min(consumption)), sd(consumption))
#basically hugely varied ranges, partially cuz they are different masses to how much it can actually be part of your diet
```
###Answer to research question 3 (Final Visualization)
```{r}
#| fig-height: 17
#| fig-width: 18
ne_countries(returnclass = "sf") |>
  select(name, geometry) |>
  mutate(name = ifelse(name == "United States of America", "USA", name)) |>
  mutate(name = ifelse(name == "Bosnia and Herz.", "Bosnia and Herzegovina", name)) |>
  mutate(name = ifelse(name == "Czechia", "Czech Republic", name)) |>
  mutate(name = ifelse(name == "Taiwan", "Taiwan. ROC", name)) |>
  left_join(
    fcc |> 
      select(-co2_emmission) |>
      group_by(food_category) |>
      mutate(consumption = (consumption - mean(consumption))/sd(consumption)),
    #measures by how many standard deviations away from the mean
            join_by(name==country)) |>
  pivot_wider(names_from = food_category,
              values_from = "consumption") |>
  select(-"NA") |>
  pivot_longer(cols = c(-name, -geometry),
               names_to = "food_category",
                values_to = "consumption") |>
  ggplot() +
  geom_sf(aes(fill=consumption)) +
  facet_wrap(~food_category, ncol=3) +
  #omg its so much more legible like that
  labs(title =  "Worldwide Relative Food Consumption by Category") +
  theme(legend.position = "left", legend.key.size = unit(0.5, "in"), legend.text = element_text(size =14), legend.title = element_text(size =14), title= element_text(size=18)) +
  scale_fill_viridis_c(name = "Relative Consumption")
```
